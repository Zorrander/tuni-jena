@prefix ns:   <http://www.example.org/ns#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix cogrob: <http://onto-server-tuni.herokuapp.com/Panda#> .

@include <OWL> .

// React to handover commands
[handoverCmd: (?cmd cogrob:has_action "give"), (?cmd cogrob:has_target ?thing)
      -> (cogrob:handoverExample cogrob:actsOn ?thing) (cogrob:handoverExample cogrob:isCausedBy ?cmd) (cogrob:handoverCmd cogrob:isMet "true"^^xsd:boolean)
]

[handoverTargetRule: (?event rdf:type cogrob:HandoverTask), (?event cogrob:actsOn ?thing), (?event cogrob:hasMethod ?method), (?method cogrob:hasSubtask ?subtask), (?subtask rdf:type cogrob:ReachTask)
      -> (?subtask cogrob:actsOn ?thing)]


[isHoldingCondition: (cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean)
                    ->  ( cogrob:holds cogrob:isMet "true"^^xsd:boolean)
                    ]

[cond1: (cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean), (cogrob:doesNotHold cogrob:isMet "true"^^xsd:boolean)
 -> drop(1)(cogrob:doesNotHold cogrob:isMet "true"^^xsd:boolean)]

[cond2: noValue(cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean), (cogrob:holds cogrob:isMet "true"^^xsd:boolean)
  -> drop(1)(cogrob:holds cogrob:isMet "true"^^xsd:boolean)]

[cond3: (cogrob:Panda cogrob:canReach "true"^^xsd:boolean), (cogrob:cannotReach cogrob:isMet "true"^^xsd:boolean)
  -> drop(1)(cogrob:cannotReach cogrob:isMet "true"^^xsd:boolean)]

[cond4: noValue(cogrob:Panda cogrob:canReach "true"^^xsd:boolean), (cogrob:canReach cogrob:isMet "true"^^xsd:boolean)
    -> drop(1)(cogrob:canReach cogrob:isMet "true"^^xsd:boolean)]

[isNotHoldingCondition: noValue(cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean)
                    ->  ( cogrob:doesNotHold cogrob:isMet "true"^^xsd:boolean)
                    ]

[canReachCondition: (cogrob:Panda cogrob:isAbleToReach "true"^^xsd:boolean)
                    ->  ( cogrob:canReach cogrob:isMet "true"^^xsd:boolean)
                    ]

[cannotReachCondition: noValue(cogrob:Panda cogrob:isAbleToReach "true"^^xsd:boolean)
                    ->  ( cogrob:cannotReach cogrob:isMet "true"^^xsd:boolean)
                    ]

[readyToBeTakenCondition: (?event rdf:type cogrob:HandoverTask), (?event cogrob:actsOn ?thing), (?thing cogrob:isReadyToBeTaken "true"^^xsd:boolean)
                    ->  ( cogrob:readyToBeTaken cogrob:isMet "true"^^xsd:boolean), drop(1)(cogrob:notReadyToBeTaken cogrob:isMet "true"^^xsd:boolean)
                    ]

[notReadyToBeTakenCondition:(?event rdf:type cogrob:HandoverTask), (?event cogrob:actsOn ?thing), noValue(?thing cogrob:isReadyToBeTaken "true"^^xsd:boolean)
                    ->  ( cogrob:notReadyToBeTaken cogrob:isMet "true"^^xsd:boolean), drop(1)(cogrob:readyToBeTaken cogrob:isMet "true"^^xsd:boolean)
                    ]


//[effectMoveTask: (?event rdf:type cogrob:MoveTask), (?event cogrob:actsOn ?thing), (?event cogrob:isCompleted "true"^^xsd:boolean)->  ]


[effectReachTask: (cogrob:reachFor cogrob:isCompleted "true"^^xsd:boolean)
                      -> (cogrob:Panda cogrob:isAbleToReach "true"^^xsd:boolean)
                      ]

[effectGraspTask: (cogrob:grasp cogrob:isCompleted "true"^^xsd:boolean)
                      -> (cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean)
                      ]

[effectReleaseTask: (?event rdf:type cogrob:ReleaseTask), (?event cogrob:isCompleted "true"^^xsd:boolean)
                      -> drop(1)(cogrob:Panda cogrob:isHoldingSomething "true"^^xsd:boolean)
                      ]
